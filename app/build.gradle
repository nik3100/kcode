plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    //id 'com.google.gms.google-services'
    //id 'com.google.firebase.crashlytics'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.kcode'
    compileSdk 33

    defaultConfig {
        applicationId "com.kcode"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures{
        viewBinding true
    }

    dataBinding {
        enabled true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
//    implementation 'com.google.firebase:firebase-crashlytics:18.3.2'
//    implementation 'com.google.firebase:firebase-analytics:21.2.0'
//    implementation 'com.google.firebase:firebase-messaging:23.1.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'


    // ViewModel
    def lifecycle_version = "2.6.0"
    def fragment_version = "1.5.5"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //pagging 3
    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime:$paging_version"

    //Room
    def room_version = "2.4.3"
    implementation "androidx.room:room-runtime:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"

    //Viewpager2
    def viewpager_version = "1.0.0"
    implementation "androidx.viewpager2:viewpager2:$viewpager_version"

    //multidex
    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    //DotsIndicator
    def dots_indicator_version = "4.3"
    implementation "com.tbuonomo:dotsindicator:$dots_indicator_version"

    //Notification
    def core_version = "1.6.0"
    implementation "androidx.core:core:$core_version"

    //glide
    def glide_version = "4.15.1"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    //Retrofit
    def retrofit_version = "2.9.0"
    def logging_version = "4.3.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$logging_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_version"

    //sdp ssp
    def sdp_version = "1.1.0"
    implementation "com.intuit.sdp:sdp-android:$sdp_version"
    implementation "com.intuit.ssp:ssp-android:$sdp_version"

    //Hilt
    def hilt_version = "2.44"
    def hilt_compiler_version = "1.0.0"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler_version"


}

// Allow references to generated code
kapt {
    correctErrorTypes true
}